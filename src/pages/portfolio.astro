---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
import Container from '../components/Container.astro';
import HomeHeroSection from '../components/sections/heros/HomeHeroSection.astro';
import { getCollection } from 'astro:content';
import FormattedDate from '../components/FormattedDate.astro';
import CustomModal from '../components/Modal.astro';


const posts_blog = (await getCollection('blog')).sort(
	(a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
);

const posts_project = (await getCollection('project'))
  //.filter(post => post.data.status == 'active') // Filter out active posts
  .sort((a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf());
---


<Layout title="Portfolio | t2del" meta_description="Portfolio | t2del - meta description" body_class="portfolio index something you wish to add for any use">
		<section>			
			<Container className="custom-class">
				<h2 class="notshow fromleft"> <span class="text-gradient">Portfolio</span></h2>
				<ul role="list" class="link-card-grid">
					{
						posts_project.map((post) => (
							<li class="notshow blur portfolio-list">
								<CustomModal title={post.data.title} slug={post.slug} classText="animate_underline" imgsrc={post.data.heroImage}  />
							</li>
						))
					}
				</ul>
				{
					posts_project.map((post) => (
						<div id={post.slug} class="modal">						
							<div class="modal-content">
								
								<p>{post.data.title}</p>
								<div class="modal-grid">
									<div class="description">
										<div>Role: <span>{post.data.role}</span></div>
										<div>Platform: <span>{post.data.platform}</span></div>
										<a href={post.data.siteUrl} rel="noopener noreferrer"><span>Visit Site</span></a>
									</div>
									<div class="img"><img  src={post.data.heroImage} alt={post.data.title}  title={post.data.title} /></div>
								</div>
							</div>
						</div>
						// 
					))
				}		
			</Container>					
		</section>	
</Layout>

<style>
	main {
		margin: auto;
		padding: 1rem;
		max-width: calc(100% - 2rem);
		font-size: 20px;
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h2 {
		font-size: 3em;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: #00000080;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
</style>